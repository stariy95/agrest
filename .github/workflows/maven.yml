name: 'build test deploy'

on:
  push:
    branches: [ github-actions ]

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout...
        uses: actions/checkout@v2

      - name: Set up JDK...
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Retrieve mvn repo cache...
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-build-v1

      - name: Build and test...
        run: mvn clean verify

      - name: test
        run: export TEST_VAR=123

  debug:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout...
        uses: actions/checkout@v2

      - name: Set up JDK...
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Test env
        env:
          TEST_REF: ${{ github.ref }}
        run: echo "running build on branch $TEST_VAR ($TEST_REF)"

#  deploy:
#    needs: build
#    runs-on: ubuntu-latest
#
#    steps:
#    - name: Checkout...
#      uses: actions/checkout@v2
#
#    - name: Set up JDK...
#      uses: actions/setup-java@v1
#      with:
#        java-version: 1.8
#
#    - name: Retrieve mvn repo cache...
#      uses: actions/cache@v2
#      with:
#        path: ~/.m2/repository
#        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-build-v1
#
#    - name: Deploy...
#      run: mvn clean javadoc:jar deploy -DskipTests --settings .github/workflows/maven_settings.xml
#      env:
#        MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
#        MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
